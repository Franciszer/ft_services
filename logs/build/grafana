Sending build context to Docker daemon   3.36MB
Step 1/14 : FROM alpine:latest
 ---> a24bb4013296
Step 2/14 : RUN apk update && apk add --no-cache --upgrade bash
 ---> Using cache
 ---> 5afd9ee7c6ed
Step 3/14 : RUN apk add telegraf --repository http://dl-4.alpinelinux.org/alpine/edge/testing/ --allow-untrusted --no-cache
 ---> Using cache
 ---> 5261487190f6
Step 4/14 : RUN wget https://dl.grafana.com/oss/release/grafana-6.7.2.linux-amd64.tar.gz
 ---> Using cache
 ---> c8cc5cd700dc
Step 5/14 : RUN tar -zxvf grafana-6.7.2.linux-amd64.tar.gz
 ---> Using cache
 ---> a1ef75da4ec3
Step 6/14 : RUN apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main libc6-compat
 ---> Using cache
 ---> db41c4c4087b
Step 7/14 : COPY ./srcs/grafana.db ./grafana-6.7.2/data/
 ---> Using cache
 ---> b62ce40f23ed
Step 8/14 : COPY ./srcs/start.sh /start.sh
 ---> Using cache
 ---> 8dfa4197153d
Step 9/14 : RUN mkdir -p /etc/telegraf
 ---> Using cache
 ---> 1f9954b5fd2f
Step 10/14 : COPY ./srcs/telegraf.conf /etc/telegraf/telegraf.conf
 ---> Using cache
 ---> 870f4ba125a5
Step 11/14 : COPY ./srcs/start.sh /start.sh
 ---> Using cache
 ---> 176e37b0199e
Step 12/14 : RUN chmod +x /start.sh
 ---> Using cache
 ---> 73c442a593c1
Step 13/14 : EXPOSE 3000
 ---> Using cache
 ---> 6febd41a00f6
Step 14/14 : CMD ./start.sh
 ---> Using cache
 ---> 7238bd34bb3e
Successfully built 7238bd34bb3e
Successfully tagged grafana_alpine:latest
